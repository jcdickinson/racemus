name: Continuous Deployment
on: 
  release:
    types:
      - created

jobs:
  test:
    name: Test
    runs-on: windows-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Nightly Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --no-run
        env:
          CARGO_INCREMENTAL: 0

      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
        env:
          CARGO_INCREMENTAL: 0
      
  build:
    name: Build
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Nightly Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
        env:
          CARGO_INCREMENTAL: 0
      
      - name: Create Package
        run: ./package-windows.ps1
        shell: pwsh
        working-directory: .

      - name: Upload Windows Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/racemus-windows.zip
          asset_name: racemus-windows.zip
          asset_content_type: application/zip

  publish-to-dockerhub:
    name: Publish to Dockerhub
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Publish to Dockerhub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: jcdickinson/racemus
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_semver: true
